name: CI/CD Process
on:
  workflow_call:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-24.04
    concurrency:
      # Only one release job at a time per branch, as only master releases.
      group: release-${{ github.event.number || github.ref }}
    if: >-
      !github.event.repository.fork
      && (
        github.event_name != 'pull_request'
        || github.event.pull_request.head.repo.full_name == github.repository
      )
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: recursive
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
      - name: Find the version of Node from package.json
        id: node-version
        run: echo "version=$(jq -r .engines.node package.json)" >> $GITHUB_OUTPUT
      - name: Install Node
        uses: actions/setup-node@v6.0.0
        with:
          node-version: ${{ steps.node-version.outputs.version }}
      - name: Login to dockerhub
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin docker.io
      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN }}
        run: |
          npm install
          npx semantic-release
  success:
    runs-on: ubuntu-24.04
    needs:
      - release
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}